name: "test"

on: # rebuild any PRs and main branch changes
  # Triggers the workflow on push or pull request events, but only for the master branch
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching for Releases: v*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  testJob01:
    runs-on: ubuntu-latest

    steps:
    - name: get repository
      uses: actions/checkout@master                 #  v1

    - name: get version
      id: version
      uses: ./
      with: 
        path: 'package.json'
        prop_path: 'version'                        #  "version": "0.2.0",
    
    - name: Check result 11
      run: echo ${{ steps.version.outputs.prop }}
        
    - name: get nested json property
      id: get_json_property
      uses: ./
      with: 
        path: 'package.json'
        prop_path: 'scripts.format'                 #    "scripts": { "build": "tsc && npm run pack", "format": "prettier --write **/*.ts", ..., ... }
    
    - name: Check result 12
      run: echo ${{ steps.get_json_property.outputs.prop }}
    
    - name: Check result 13
      run: echo ${{ steps.get_json_property.outputs.propStr }}
    
    - name: Check result 14
      run: |
        echo ${{ steps.version.outputs.prop }}
        echo "::set-output name=VER_1C_fromJSON::${{ steps.version.outputs.prop }}"
        echo.
        echo ${{ steps.get_json_property.outputs.prop }}
        echo ${{ steps.get_json_property.outputs.propStr }}
    
    - name: Check result 15
      run: |
        echo grep "<version>" src\Configuration\Configuration.mdo | grep -oP "(?<version>)(\d+)\.(\d+)\.(\d+)\.(\d+)(?=</version>)")"
        echo "::set-output name=PROD_VER_fromConfiguration::$(grep "<version>" PD_ro_devel\src\Configuration\Configuration.mdo | grep -oP "(?<version>)(\d+)\.(\d+)\.(\d+)\.(\d+)(?=</version>)")"
    
    - name: Check result 16
      run: |
        echo VER_1C_fromJSON = ${{ VER_1C_fromJSON }}
        echo PROD_VER_fromConfiguration = ${{ PROD_VER_fromConfiguration }}

  testJob02:
    runs-on: ubuntu-latest

    steps:
      - name: get json file
        id: set_var
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          #content="${content//'%'/'%25'}"
          #content="${content//$'\n'/'%0A'}"
          #content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
    
      - name: Check result 21
        run: |
          echo "${{ fromJson(steps.set_var.outputs.packageJson).version }}"
